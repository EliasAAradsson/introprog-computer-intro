name: Build and Release LaTeX Document

on:
  push:
    tags:
      - "lab_*"

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Github Action for LaTeX
        uses: xu-cheng/latex-action@v4
        with:
          latexmk_use_xelatex: true
          work_in_root_file_dir: true
          root_file: |
            lab-instructions/modules/latex/newex/sort_scala_losning.tex
            lab-instructions/dodlabs.tex
        env:
          TEXINPUTS: ".:../latex-support//:./latex-support//:"

      - name: Extract and set tag name
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/lab_}" >> $GITHUB_ENV

      - name: Rename the output PDF
        run: |
          mv lab-instructions/dodlabs.pdf lab-instructions/dodlabs_${TAG_NAME}.pdf

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Lab instructions ${{ env.TAG_NAME }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./lab-instructions/dodlabs_${{ env.TAG_NAME }}.pdf
          asset_name: dodlabs_${{ env.TAG_NAME }}.pdf
          asset_content_type: application/pdf





      - name: Prepare stable 'latest' filename
        run: |
          cp "lab-instructions/dodlabs_${{env.TAG_NAME}}.pdf" \
             "lab-instructions/dodlabs_latest.pdf"
          echo "ASSET_LATEST=lab-instructions/dodlabs_latest.pdf" >> $GITHUB_ENV

      - name: Delete old asset from subject 'latest' release (if exists)
        uses: actions/github-script@v7
        with:
          script: |
            const tag = `dodlabs_latest`;
            try {
              const rel = await github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag
              });
              for (const a of rel.data.assets ?? []) {
                if (a.name === `slides_${process.env.SUBJECT}_latest.pdf`) {
                  await github.rest.repos.deleteReleaseAsset({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    asset_id: a.id
                  });
                }
              }
            } catch (e) {
              if (e.status !== 404) throw e; // 404 = ingen 'latest' release Ã¤n
            }

      - name: Create/Update subject 'latest' release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: dodlabs_latest
          name: "Lab instructions latest"
          files: ${{ env.ASSET_LATEST }}
          draft: false
          prerelease: false
